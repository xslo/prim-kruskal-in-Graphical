using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;

namespace WindowsFormsApplication10
{ 
    public partial class Form1 : Form
    { 
        string input = "";
        string[] str;
        int o = 0;
        
        int[] num = new int[100];
        int[] x = new int[100];
        int[] xx = new int[100];
        int[] xxx = new int[100];
        int[] y = new int[100];
        int[] yy = new int[100];
        int[] yyy = new int[100];
        int[] zzz = new int[100];
        int[] m = new int[100];
        int[] mm = new int[100];
        int[] q = new int[100];
        int[] p = new int[100];
        int[] k = new int[100];
        int[] A = new int[100];
        int[] B = new int[100];
        int[] h = new int[100];
        int[] hh = new int[100];
        int[] hhh = new int[100];
        int[] hhhh = new int[100];
        int[] hhhhh = new int[100];
        int[] u = new int[4];//存prim位置
        int a = 0, b = 0, x0 = 0, x1 = 0, y0 = 0, y1 = 0, i = 0, tem = 0, tem1 = 0, tem2 = 0,t=0,c=0,h1=1,h2=0, h3 =0, h4 =0,h5=0,ten = 0;
        Graphics g;                 // 繪圖區
        Pen pen;                    // 畫筆
        SolidBrush sb;              //筆刷
        SolidBrush sb1;              //筆刷
        Font ft = new Font("新細明體", 16); //字型大小
        public Form1()
        {
           
            InitializeComponent();
            g = this.CreateGraphics(); // 取得繪圖區物件
            pen = new Pen(Color.Black, 3); // 設定畫筆為黑色、粗細為 3 點。
           sb = new SolidBrush(Color.Blue);//設定筆刷為藍色
           sb1 = new SolidBrush(Color.White);//設定筆刷為白色
        }

        private void Form1_Load(object sender, EventArgs e)
        {
           
        }
        private void button1_Click(object sender, EventArgs e)
        {
            g.Clear(SystemColors.Control);//清除畫布
           
            StreamReader sr = new StreamReader("homework3test.txt", Encoding.UTF8); //建立檔案串流，讀檔，Encoding.UTF8代表使用UTF-8編碼；為了處理全形的逗號
            while (!sr.EndOfStream) //讀取檔案內容直到檔尾，將內容存入input
            {
                input = sr.ReadToEnd();
            }
            sr.Close(); //關閉檔案串流

            str = input.Split(",\r\n".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
            //Split()把一行字串分成多個子字串
            //"，\r\n".ToCharArray()代表以，和特殊字元\r以及特殊字元\n區隔字串
            //StringSplitOptions.RemoveEmptyEntries是分割選項，用來移除空的字串

            //將字串轉成數值
            int t = 0;
            while (i < str.Length)
            {
                num[i] = Convert.ToInt32(str[i]); //字串轉數值
               // textBox1.Text += num[t].ToString() + " , ";
                i++;
            }
            for (int v = 1; v <= (str.Length - num[1]*3);v++ )//取出個點 X Y
            {
                if (v % 2 != 0)
                {
                    x[a] = num[v+num[1]*3+1];
                    a++;
                }
                else
                {
                    y[b] = num[v + num[1] * 3 +1];
                    b++;
                }                  
            }
            for (i = 0; i < a-1; i++)
            {
                //xtBox1.Text += x[t].ToString() + " , " + y[t].ToString() + "  ||  ";//測試
                g.FillEllipse(sb, x[i]-15, y[i]-15 , 30,  30);

                g.DrawString((i + 1).ToString(), ft, Brushes.Cyan, x[i]-15, y[i]-15);
            }
            t = 0;
            for(int l =1;l<=num[1]*3;l+=3) // 畫出各點與各點間的距離
            {
                for( int l1 = 1; l1<=3 ;l1++)
                {
                    if(l1 == 1)
                    {
                        //m[t] = num[l + l1];
                        x0 = x[num[l + l1] - 1];
                        y0 = y[num[l + l1] - 1];
                    }
                    if (l1 == 2)
                    {
                        //m[t] = num[l + l1];
                        x1 = x[num[l + l1] - 1];
                        y1 = y[num[l + l1] - 1];
                    }
                    if(l1 == 3)
                    { 
                    g.DrawLine(pen, x0, y0, x1, y1);
                   g.DrawString(num[l+l1].ToString(), ft, sb, (x0+x1)/2, (y1+y0)/2);
                   //textBox1.Text += x0.ToString() + " , " +y0.ToString() + "  ||  "+ x1.ToString() + " , " +y1.ToString() + "  ||  ";//測試
                }
                  
                    t++;
                }              
            }
            button1.Enabled = false;
            button2.Enabled = true;
            button3.Enabled = true;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            //int pr[,] = new int[num[1],num[1]];
            int ii = 2;
            i=0;
            t = 0;
            int[,] pr = new int[num[0] + 1, num[0] + 1];
            for (int d = 4; d < str.Length - num[0] * 2; d += 3)//把邊取出來
            {
                m[t + 2] = num[d];
                m[t] = num[d - 2];
                m[t + 1] = num[d - 1];
                t += 3;
                // pr[num[d], num[d + 1]] = num[d + 2];
                //  pr[num[d + 1], num[d]] = num[d + 2];
            }
            for (int count1 = 0; count1 < t; count1 += 3)//排邊的大小 
            {
                for (int count2 = 5; count2 < t; count2 += 3)
                {
                    if (m[count2 - 3] > m[count2])
                    {
                        tem = m[count2 - 3];
                        m[count2 - 3] = m[count2];
                        m[count2] = tem;
                        tem1 = m[count2 - 5];
                        m[count2 - 5] = m[count2 - 2];
                        m[count2 - 2] = tem1;
                        tem2 = m[count2 - 4];
                        m[count2 - 4] = m[count2 - 1];
                        m[count2 - 1] = tem2;
                    }
                }
            }
            for (int count1 = 0; count1 < t; count1+=3)
            {
                if(m[count1] > m[count1+1])
                {
                    ten = m[count1];
                    m[count1] = m[count1 + 1];
                    m[count1 + 1] = ten;
                }
            }
            for (int count1 = 1; count1 <= num[0]; count1 ++)
            {
                h[count1] = count1;
            }
           
            for (int d = 0; d < t; d += 3)//判斷迴圈
            {
                xx[d] = m[d];
                yy[d] = m[d + 1];
                
                if (h[m[d]] == h[m[d + 1]])
                {
                    int dd = d;
                    for (; dd < t; dd += 3)
                    {
                        m[dd] = m[dd + 3];
                        m[dd + 1] = m[dd + 4];
                        m[dd + 2] = m[dd + 5];
                    }
                    t -= 3;
                    //  break;
                }
                if (h[m[0]] > h[m[1]])
                {
                    h[m[0]] = h[m[1]];
                }
                else
                {
                    h[m[1]] = h[m[0]];
                }
                for (int f = 0;f<d ;f+=3 )
                {      
                    
                    if((m[d]==xx[f])||(m[d]==yy[f]))
                    {
                        h[m[d+1]] = h[m[d]];
                    }
                    else if ((m[d+1] == xx[f]) || (m[d+1] == yy[f]))
                    {
                        h[m[d ]] = h[m[d+1]];
                    }
                    else if(h[m[d]] > h[m[d+1]])
                    {
                        h[m[d]] = h[m[d + 1]];
                    }
                    else if (h[m[d]] < h[m[d + 1]])
                    {
                        h[m[d+1]] = h[m[d]];
                    }
                }                
            }
            
            //for (int dd = 0; dd < t; dd +=3 )
           // {
                //textBox1.Text += m[dd] + "," + m[dd + 1] + "," + m[dd + 2] + "||";
           // }
                g.Clear(SystemColors.Control);//清除畫布
            for (i = 0; i < a - 1; i++)
            {
               // textBox1.Text += x[t].ToString() + " , " + y[t].ToString() + "  ||  ";//測試
                g.FillEllipse(sb, x[i] - 15, y[i] - 15, 30, 30);

                g.DrawString((i + 1).ToString(), ft, Brushes.Cyan, x[i] - 15, y[i] - 15);
                timer1.Enabled = true;
            }
            t = 0;
                button2.Enabled = false;
        }
         int l = 0;
       
        private void timer1_Tick(object sender, EventArgs e)
        {
            
            //for (int l = 0; l < t; l += 3) // 畫出各點與各點間的距離
          //  {
            if(t<num[0]-1)
            {
                for (int l1 = 0; l1 < 3; l1++)
                {
                    if (l1 == 0)
                    {
                        //m[t] = num[l + l1];
                        x0 = x[m[l + l1] - 1];
                        y0 = y[m[l + l1] - 1];
                    }
                    if (l1 == 1)
                    {
                        //m[t] = num[l + l1];
                        x1 = x[m[l + l1] - 1];
                        y1 = y[m[l + l1] - 1];
                    }
                    if (l1 == 2)
                    {
                        g.DrawLine(pen, x0, y0, x1, y1);
                        g.DrawString(m[l + l1].ToString(), ft, sb, (x0 + x1) / 2, (y1 + y0) / 2);
                     //  textBox1.Text += x0.ToString() + " , " + y0.ToString() + "  ||  " + x1.ToString() + " , " + y1.ToString() + "  ||  ";//測試
                    }
            }
                l += 3;
                t++;
               // }
            }
            else 
            {
                timer1.Enabled = false;
            }
            
        }

        private void button3_Click(object sender, EventArgs e)
        {
            t = 0;
          
           A[0] = 1;//起始點為1
           c++;//A長度
          
            for(int d = 0;d<num[0]-1;d++)//沒放進去的點
            {
                B[d] = d + 2;
                t++;//B長度
            }
            //t[] u = new int[3];//存位置
            //textBox1.Text += a[0]+"  "+a.Length+","+b[b.Length-1]+","+b.Length;
           // timer2.Enabled = true;
             g.Clear(SystemColors.Control);//清除畫布
            for (i = 0; i < a - 1; i++)
            {
                //xtBox1.Text += x[t].ToString() + " , " + y[t].ToString() + "  ||  ";//測試
                g.FillEllipse(sb, x[i] - 15, y[i] - 15, 30, 30);

                g.DrawString((i + 1).ToString(), ft, Brushes.Cyan, x[i] - 15, y[i] - 15);
                timer2.Enabled = true;
            }
            button3.Enabled = false;
        }

        private void timer2_Tick(object sender, EventArgs e)
        {
            int[,] pr = new int[num[0]+1,num[0]+1];
           //t = 0;
           for (int d = 2; d < str.Length - num[0] * 2; d += 3)//把邊取出來
           {
               pr[num[d], num[d + 1]] = num[d + 2];
               pr[num[d+1], num[d ]] = num[d + 2];
              // textBox1.Text += pr[num[d], num[d+1] ].ToString()+" " + pr[0,0];
           }
            for(int aa=0;aa<c;aa++)
            {
                for(int bb = 0;bb<t;bb++)
                {
                    if(u[0]==0)//設初值  讓其最大
                    {
                        u[0] = 100000000;
                        u[1] = 100000000;
                        u[2] = 100000000;
                        u[3] = 100000000;
                    }
                    if(u[2]>pr[A[aa],B[bb]])
                    {
                        if (pr[A[aa], B[bb]]!=0)
                        {
                         u[0] = A[aa];
                        u[1] = B[bb];
                        u[2] = pr[A[aa], B[bb]];
                        u[3] = B[bb];//最小點Y
                        }
                       
                    }
                }
            }
            for (int l1 = 0; l1 < 3; l1++)
            {
                if (l1 == 0)
                {
                    //m[t] = num[l + l1];
                    x0 = x[u[l1] - 1];
                    y0 = y[u[l1] - 1];
                }
                if (l1 == 1)
                {
                    //m[t] = num[l + l1];
                    x1 = x[u[l1]  - 1];
                    y1 = y[u[l1]  - 1];
                }
                if (l1 == 2)
                {
                    g.DrawLine(pen, x0, y0, x1, y1);
                    g.DrawString(u[l1].ToString(), ft, sb, (x0 + x1) / 2, (y1 + y0) / 2);
                    //textBox1.Text += x0.ToString() + " , " + y0.ToString() + "  ||  " + x1.ToString() + " , " + y1.ToString() + "  ||  ";//測試
                }
            }
            A[c] = u[3];//加入
            c++;
            for(int h = 0;h<t;h++)
            {
                if(B[h]==u[3])//刪除
                {
                    for (int hh = h; hh<t;hh++ )
                        B[hh] = B[hh + 1];
                }
            }
            //textBox1.Text += t.ToString();
            t--;
            u[0] = 0;
            u[1] = 0;
            u[2] = 0;
            u[3] = 0;
            if(t==0)
            {
                timer2.Enabled = false;
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            Close();
        }
    }
}
